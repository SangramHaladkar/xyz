package com.mobifilia.monitormymortgage.BaseClasses;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.support.v4.content.LocalBroadcastManager;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;

import com.eris.androidddp.ErisCollectionManager;
import com.facebook.CallbackManager;
import com.facebook.FacebookCallback;
import com.facebook.FacebookException;
import com.facebook.FacebookSdk;
import com.facebook.GraphRequest;
import com.facebook.GraphResponse;
import com.facebook.Profile;
import com.facebook.login.LoginManager;
import com.facebook.login.LoginResult;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GoogleApiAvailability;
import com.mobifilia.monitormymortgage.Activity.FacebookRegisterActivity;
import com.mobifilia.monitormymortgage.Common.CommonConstants;
import com.mobifilia.monitormymortgage.GCM.RegistrationIntentService;
import com.mobifilia.monitormymortgage.MainActivity;
import com.mobifilia.monitormymortgage.R;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;

import im.delight.android.ddp.ResultListener;

public class BaseActivity extends AppCompatActivity {
    private static final String TAG = BaseActivity.class.getSimpleName();
    private BroadcastReceiver pushNotificationMsgBroadcastReceiver;
    private static final int PLAY_SERVICES_RESOLUTION_REQUEST = 9000;
    private boolean isReceiverRegistered;
    String email;
    String statusCode;
    private CallbackManager callbackManager;
    String id;
    Profile profile;
    public static boolean facebookFlag = false;
    public static String facebookUserLoginId;
    HashMap<String, Object> stringObjectHashMap;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        FacebookSdk.sdkInitialize(BaseActivity.this);
        setContentView(R.layout.activity_base);
        pushNotificationMsgBroadcastReceiver = new BroadcastReceiver() {
            @Override
            public void onReceive(Context context, Intent intent) {
                if (intent.getExtras() != null) {
                    String msg = intent.getExtras().getString("message");
                    String title = intent.getExtras().getString("title");
                    ViewDialog.showNotifications(BaseActivity.this, msg);
                }
            }
        };
        if (checkPlayServices()) {
            // Start IntentService to register this application with GCM.
            Intent intent = new Intent(this, RegistrationIntentService.class);
            startService(intent);
        }
//        profile = Profile.getCurrentProfile();
//        if (profile != null) {
//            LoginManager.getInstance().logOut();
//        }
        callbackManager = CallbackManager.Factory.create();
        LoginManager.getInstance().registerCallback(callbackManager, new FacebookCallback<LoginResult>() {
            @Override
            public void onSuccess(LoginResult loginResult) {
                if (CommonConstants.mDebug) Log.v(TAG, "onSuccess");

                final String accessToken = loginResult.getAccessToken().getToken();
                if (CommonConstants.mDebug) Log.v(TAG, accessToken);
                GraphRequest request = GraphRequest.newMeRequest(loginResult.getAccessToken(), new GraphRequest.GraphJSONObjectCallback() {
                    @Override
                    public void onCompleted(JSONObject object, GraphResponse response) {
                        try {
                            profile = Profile.getCurrentProfile();
                            if (profile != null) {
                                if (CommonConstants.mDebug)
                                    Log.v(TAG, "Facebook Object :" + object);
                                id = object.getString("id");
                                if (CommonConstants.mDebug) Log.v(TAG, id);
                                stringObjectHashMap = new HashMap<String, Object>();
                                if (object.has("email")) {
                                    String email = object.getString("email");
                                    PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().putString("FacebookEmail", email).commit();
                                    stringObjectHashMap.put("email", email);
                                } else {
                                    PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().remove("FacebookEmail").apply();
                                    if (CommonConstants.mDebug)
                                        Log.v(TAG, "facebook email not found");
                                }
                                String firstName = object.getString("first_name");
                                String lastName = object.getString("last_name");
                                PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().putString("FacebookId", id).apply();
                                PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().putString("FacebookFirstName", firstName).apply();
                                PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().putString("FacebookLastName", lastName).apply();
                                PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().putString("AccessTokan", accessToken).apply();

                                stringObjectHashMap.put("type", "facebook");
                                stringObjectHashMap.put("value", id);
                                stringObjectHashMap.put("email", email);

                                ErisCollectionManager.getInstance().callMethod("isUserExist", new Object[]{stringObjectHashMap}, new ResultListener() {
                                    @Override
                                    public void onSuccess(String jsonResponse) {
                                        try {
                                            JSONObject jsonRootObject = new JSONObject(jsonResponse);
                                            statusCode = jsonRootObject.getString("status");
                                            if (CommonConstants.mDebug) Log.v(TAG, statusCode);
                                            if (statusCode.equalsIgnoreCase("false") && profile != null) {
                                                JSONObject jsonObject = jsonRootObject.getJSONObject("error");
                                                jsonObject.getString("code");
                                                jsonObject.getString("message");
                                                if (CommonConstants.mDebug)
                                                    Log.v(TAG, jsonObject.getString("code"));
                                                if (CommonConstants.mDebug)
                                                    Log.v(TAG, jsonObject.getString("message"));
                                                if (CommonConstants.mDebug)
                                                    Log.v(TAG, "onSuccess-false");
                                                if (profile != null) {
                                                    Intent intent = new Intent(BaseActivity.this, FacebookRegisterActivity.class);
                                                    startActivity(intent);
                                                    finish();
                                                }

                                            } else if (statusCode.equalsIgnoreCase("true")) {
                                                JSONObject jsonRootObjectTrue = new JSONObject(jsonResponse);
                                                statusCode = jsonRootObjectTrue.getString("status");
                                                if (CommonConstants.mDebug) Log.v(TAG, statusCode);
                                                if (statusCode.equalsIgnoreCase("true")) {
                                                    HashMap<String, Object> stringObjectHashMap = new HashMap<String, Object>();
                                                    stringObjectHashMap.put("id", id);
                                                    stringObjectHashMap.put("socialType", "facebook");
                                                    stringObjectHashMap.put("accessToken", accessToken);
                                                    stringObjectHashMap.put("profile", "{}");
                                                    ErisCollectionManager.getInstance().callMethod("socialLoginWithAccessToken", new Object[]{stringObjectHashMap}, new ResultListener() {
                                                        @Override
                                                        public void onSuccess(String s) {
                                                            try {
                                                                JSONObject jsonRootObject = new JSONObject(s);
                                                                jsonRootObject.getString("status");
                                                                if (jsonRootObject.getString("status").equals("true")) {
                                                                    JSONObject jsonObject = jsonRootObject.getJSONObject("data");
                                                                    jsonObject.getString("code");
                                                                    jsonObject.getString("message");
                                                                    JSONObject jsonObject1 = jsonObject.getJSONObject("result");
                                                                    jsonObject1.getString("type");
                                                                    jsonObject1.getString("userId");
                                                                    if (CommonConstants.mDebug)
                                                                        Log.v(TAG, jsonObject1.getString("userId"));
                                                                    facebookUserLoginId = jsonObject1.getString("userId");
                                                                    facebookFlag = true;
                                                                    PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().putBoolean("FacebookUserLoginFlag", facebookFlag).apply();
                                                                    PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().putString("FacebookUserLoginId", facebookUserLoginId).apply();
                                                                    Intent intent = new Intent(BaseActivity.this, MainActivity.class);
                                                                    startActivity(intent);
                                                                    finish();
                                                                }
                                                            } catch (JSONException e) {
                                                                e.printStackTrace();
                                                            }
                                                        }

                                                        @Override
                                                        public void onError(String s, String s1, String s2) {

                                                        }
                                                    });
                                                }
                                            }
                                        } catch (JSONException e) {
                                            e.printStackTrace();
                                        }
                                    }

                                    @Override
                                    public void onError(String s, String s1, String s2) {
                                        if (CommonConstants.mDebug) Log.v(TAG, "onError" + s1);
                                    }
                                });
                            }
                        } catch (JSONException ex) {
                            ex.printStackTrace();
                        }
                    }
                });
                Bundle parameters = new Bundle();
                parameters.putString("fields", "id,first_name,last_name,email,gender, birthday");
                request.setParameters(parameters);
                request.executeAsync();
            }

            @Override
            public void onCancel() {
                if (CommonConstants.mDebug) Log.v(TAG, "onCancel");
                if (ViewDialog.kProgressHUD.isShowing()) {
                    ViewDialog.hideProgress();
                }
            }

            @Override
            public void onError(FacebookException error) {
                if (CommonConstants.mDebug) Log.v(TAG, error.toString());
            }
        });

    }

    @Override
    protected void onResume() {
        super.onResume();
        registerReceiver();
    }

    @Override
    protected void onPause() {
        LocalBroadcastManager.getInstance(this).unregisterReceiver(pushNotificationMsgBroadcastReceiver);
        isReceiverRegistered = false;
        super.onPause();
    }

    private boolean checkPlayServices() {
        GoogleApiAvailability apiAvailability = GoogleApiAvailability.getInstance();
        int resultCode = apiAvailability.isGooglePlayServicesAvailable(this);
        if (resultCode != ConnectionResult.SUCCESS) {
            if (apiAvailability.isUserResolvableError(resultCode)) {
                apiAvailability.getErrorDialog(this, resultCode, PLAY_SERVICES_RESOLUTION_REQUEST)
                        .show();
            } else {
                Log.i("TAG", "This device is not supported.");
                finish();
            }
            return false;
        }
        return true;
    }

    private void registerReceiver() {
        if (!isReceiverRegistered) {
            LocalBroadcastManager.getInstance(this).registerReceiver(pushNotificationMsgBroadcastReceiver, new IntentFilter("pushNotification"));
            isReceiverRegistered = true;
        }

    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        callbackManager.onActivityResult(requestCode, resultCode, data);
    }

}
